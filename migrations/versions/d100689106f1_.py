"""empty message

Revision ID: d100689106f1
Revises: 
Create Date: 2024-05-02 19:38:04.857927

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd100689106f1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('Пользователи_fk_Роль_fkey', 'Пользователи', type_='foreignkey')
    op.drop_constraint('fk_Категория', 'Блюдо', type_='foreignkey')
    op.drop_constraint('Бронирование_fk_Номер_fkey', 'Бронирование', type_='foreignkey')
    op.drop_constraint('Бронирование_fk_Пользователь_fkey', 'Бронирование', type_='foreignkey')
    op.drop_constraint('Бронирование_fk_Статус_fkey', 'Бронирование', type_='foreignkey')
    op.drop_constraint('Заказ_fk_Пользователь_fkey', 'Заказ', type_='foreignkey')
    op.drop_constraint('Изменения_статуса_fk_заказ_fkey', 'Изменения_статуса', type_='foreignkey')
    op.drop_constraint('Изменения_статуса_fk_статус_fkey', 'Изменения_статуса', type_='foreignkey')
    op.drop_constraint('Состав_заказа_fk_Пользователь_fkey', 'Состав_заказа', type_='foreignkey')
    op.drop_constraint('Состав_заказа_fk_Статус_fkey', 'Состав_заказа', type_='foreignkey')
    op.drop_table('Роль')
    op.drop_table('Категория_блюда')
    op.drop_table('Статус_заказа')
    op.drop_table('Пользователи')
    op.drop_table('Заказ')
    op.drop_table('Номера')
    op.drop_table('Бронирование')
    op.drop_table('Состав_заказа')
    op.drop_table('Блюдо')
    op.drop_table('Статус_брони')
    op.drop_table('Изменения_статуса')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Блюдо',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Блюдо_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('Название', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Описание', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Цена', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fk_Категория_блюда', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['fk_Категория_блюда'], ['Категория_блюда.id'], name='fk_Категория'),
    sa.PrimaryKeyConstraint('id', name='Блюдо_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Состав_заказа',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Состав_заказа_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('fk_Пользователь', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fk_Статус', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['fk_Пользователь'], ['Заказ.id'], name='Состав_заказа_fk_Пользователь_fkey'),
    sa.ForeignKeyConstraint(['fk_Статус'], ['Блюдо.id'], name='Состав_заказа_fk_Статус_fkey'),
    sa.PrimaryKeyConstraint('id', name='Состав_заказа_pkey')
    )
    op.create_table('Номера',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Номера_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('Название', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Количество_мест', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Номера_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Категория_блюда',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Категория_блюда_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('Название_категории', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Категория_блюда_pkey')
    )
    op.create_table('Статус_брони',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Статус_брони_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('Название', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Статус_брони_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Пользователи',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Пользователи_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('Фамилия', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Имя', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Пароль', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Почта', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('Телефон', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('fk_Роль', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Дата_рождения', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['fk_Роль'], ['Роль.id'], name='Пользователи_fk_Роль_fkey'),
    sa.PrimaryKeyConstraint('id', name='Пользователи_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Роль',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Роль_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('Название', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Роль_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Статус_заказа',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Статус_заказа_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('название', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Статус_заказа_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Изменения_статуса',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Изменения_статуса_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('fk_заказ', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fk_статус', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Время', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['fk_заказ'], ['Заказ.id'], name='Изменения_статуса_fk_заказ_fkey'),
    sa.ForeignKeyConstraint(['fk_статус'], ['Статус_заказа.id'], name='Изменения_статуса_fk_статус_fkey'),
    sa.PrimaryKeyConstraint('id', name='Изменения_статуса_pkey')
    )
    op.create_table('Бронирование',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Бронирование_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('Дата', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('fk_Номер', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fk_Пользователь', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fk_Статус', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Количество_дней', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Время', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['fk_Номер'], ['Номера.id'], name='Бронирование_fk_Номер_fkey'),
    sa.ForeignKeyConstraint(['fk_Пользователь'], ['Пользователи.id'], name='Бронирование_fk_Пользователь_fkey'),
    sa.ForeignKeyConstraint(['fk_Статус'], ['Статус_брони.id'], name='Бронирование_fk_Статус_fkey'),
    sa.PrimaryKeyConstraint('id', name='Бронирование_pkey')
    )
    op.create_table('Заказ',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Заказ_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('Название', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('fk_Пользователь', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['fk_Пользователь'], ['Пользователи.id'], name='Заказ_fk_Пользователь_fkey'),
    sa.PrimaryKeyConstraint('id', name='Заказ_pkey')
    )
    # ### end Alembic commands ###
